library(haven)
?read_dta
d <- NA
d == NA
is.na(d)
?rbind
?write
?save
?Sys.time
?load
library(tidyr)
library(tidyverse)
library(lme4)
?glmer
library(nlme)
?nlme::nlme
test <- tibble(pat_key = c(1,1,1,1,2,2,2,3,3), icd_pri_sec = c("A", "A", "A", "P", "A", "P", "P", "A", "S"), icd_code = c("X", "Y", "Z", "W", "X", "Y", "Z", "X", Y))
library(tidyverse)
test <- tibble(pat_key = c(1,1,1,1,2,2,2,3,3), icd_pri_sec = c("A", "A", "A", "P", "A", "P", "P", "A", "S"), icd_code = c("X", "Y", "Z", "W", "X", "Y", "Z", "X", Y))
test <- tibble(pat_key = c(1,1,1,1,2,2,2,3,3), icd_pri_sec = c("A", "A", "A", "P", "A", "P", "P", "A", "S"), icd_code = c("X", "Y", "Z", "W", "X", "Y", "Z", "X", "Y"))
View(test)
new_df <- temp_file2 %>%
group_by(pat_key, icd_pri_sec) %>%
mutate(
diagnoses_admit = ifelse(icd_pri_sec == "A", toString(icd_code), NA),
diagnoses_primary = ifelse(icd_pri_sec == "P", toString(icd_code), NA),
diagnoses_secondary = ifelse(icd_pri_sec == "S", toString(icd_code), NA),
diagnoses_all = toString(icd_code)) %>%
select(-icd_code, -icd_pri_sec) %>%
distinct()
new_df <- test %>%
group_by(pat_key, icd_pri_sec) %>%
mutate(
diagnoses_admit = ifelse(icd_pri_sec == "A", toString(icd_code), NA),
diagnoses_primary = ifelse(icd_pri_sec == "P", toString(icd_code), NA),
diagnoses_secondary = ifelse(icd_pri_sec == "S", toString(icd_code), NA),
diagnoses_all = toString(icd_code)) %>%
select(-icd_code, -icd_pri_sec) %>%
distinct()
View(new_df)
print(new_df)
print(test)
new_df <- test %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code,
values_fn = list) %>%
mutate(diag_p = list(P),
diag_s = list(S)) %>%
select(-P, -S)
new_df
View(new_df)
new_df <- test %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code)
new_df <- test %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code,)
new_df <- test %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code, values_fn = list)
View(new_df)
new_df <- temp_file %>%
group_by(pat_key) %>%
mutate(diagnoses_all = toString(icd_code)) %>%
ungroup() %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code, values_fn = list) %>%
rename(diagnoses_admit = A, diagnoses_primary = P, diagnoses_secondary = S) %>%
select(-icd_code, -icd_pri_sec) %>%
distinct()
new_df <- test %>%
group_by(pat_key) %>%
mutate(diagnoses_all = toString(icd_code)) %>%
ungroup() %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code, values_fn = list) %>%
rename(diagnoses_admit = A, diagnoses_primary = P, diagnoses_secondary = S) %>%
select(-icd_code, -icd_pri_sec) %>%
distinct()
new_df <- test %>%
group_by(pat_key) %>%
mutate(diagnoses_all = toString(icd_code)) %>%
ungroup() %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code, values_fn = list) %>%
rename(diagnoses_admit = A, diagnoses_primary = P, diagnoses_secondary = S)
View(new_df)
?pivot_wider
new_df <- test %>%
mutate(icd_code = as.character(icd_code)) %>%
group_by(pat_key) %>%
mutate(diagnoses_all = toString(icd_code)) %>%
ungroup() %>%
pivot_wider(names_from = icd_pri_sec,
values_from = icd_code, values_fn = toString) %>%
rename(diagnoses_admit = A, diagnoses_primary = P, diagnoses_secondary = S)
View(new_df)
?stringr::str_split
stringr::str_split("abc.dta", "\\.")
stringr::str_split("abc.dta", "\\.")[1]
stringr::str_split("abc.dta", "\\.")[[1]]
stringr::str_split("abc.dta", "\\.")[1,1]
stringr::str_split("abc.dta", "\\.")[[[1]]]
stringr::str_split("abc.dta", "\\.")[[1]][1]
file_name <- paste0("wide_", tringr::str_split("abc.dta", "\\.")[[1]][1]), "\\.csv")
stringr::str_c(stringr::str_c("wide_", stringr::str_split("abc.dta", "\\.")[[1]][1])), "\\.csv")
stringr::str_c(stringr::str_c("wide_", stringr::str_split("abc.dta", "\\.")[[1]][1]), "\\.csv")
stringr::str_c(stringr::str_c("wide_", stringr::str_split("abc.dta", "\\.")[[1]][1]), ".csv")
?str_detect
# Sample dataset
data <- data.frame(diagnoses = c("E66, X10, Z25", "A12, B34, E66.1", "K56, E66.0, L78"))
# List of codes
x <- c("E66", "E66.0", "E66.1")
# Function to check if any of the codes in x match a section of the string
check_obesity <- function(diagnosis) {
any(grepl(paste(x, collapse = "|"), diagnosis))
}
# Apply the function to create the obesity column
data$obesity <- as.integer(sapply(data$diagnoses, check_obesity))
# View the result
print(data)
# Sample dataset
data <- data.frame(diagnoses = c("E66, X10, Z25", "A12, B34, E66.1", "K56, E66.3, L78"))
# List of codes
x <- c("E66", "E66.0", "E66.1")
# Function to check if any of the codes in x match a section of the string
check_obesity <- function(diagnosis) {
any(grepl(paste(x, collapse = "|"), diagnosis))
}
# Apply the function to create the obesity column
data$obesity <- as.integer(sapply(data$diagnoses, check_obesity))
# View the result
print(data)
?chisq.test
?t.test
?case_when
?dplyr::case_when
library(lme4)
?glmner
?glmer
??ICC
?ICC
library(DescTools)
?lme4::icc
library(lme4)
?lme4::ICC
?glmer
??ICC
??icc
??VarCorr
knitr::opts_chunk$set(echo = TRUE)
AddHealth <- read_dta("../../Assignment 3/AddHealth_ClassAssignment3Data.dta")
library(haven)
library(tidyverse)
library(ggplot2)
library(lme4)
library(broom)
library(naniar)
library(sjPlot)
library(labelled)
library(performance)
library(knitr)
library(lmerTest)
AddHealth <- read_dta("../../Assignment 3/AddHealth_ClassAssignment3Data.dta")
# packages --------------
library(tidyverse)
library(lme4)
library(performance)
library(sjstats)
# synthetic dataset ------------------
n <- 1000
id <- c(1:n)
1000/20
hosp_id <- rep(c(1:20), 50)
hosp_id
?rnorm
zeta_0 <- rep(rnorm(n=20, mean = 0, sd = 0.25), 50) #random intercept for hospital
zeta_0
zeta_hosp <- rnorm(n=20, mean = 0, sd = 0.25) #random intercepts for hospital
zeta_0 <- rep(zeta_hosp, 50)
zeta_0
beta_0 <- rep(0.5, n) #fixed effect intercept
data <- tibble(id, hosp_id, beta_0, zeta_0)
View(data)
data$Y_p <- data$beta_0 + data$zeta_0
histogram(data$Y_p)
hist(data$Y_p)
?logit
?expit
data$Y <- 1/(1 + exp(-data$Y_p))
?rbinom
data$Y <- rbinom(prob = data$Y_p)
data$Y <- rbinom(n, prob = data$Y_p)
data$Y <- rbinom(n, size = 1, prob = data$Y_p)
names(data)
# unconditional mean model -----------
m_null <- glmer(Y ~ 1 + (1|hosp_id), data, family = binomial)
summary(m_null)
performance::icc(m_null)
sjstats::icc(m_null)
?sjstats::icc
# hand calculation
vcov(m_null)
# hand calculation
as.data.frame(VarCorr(m_null),comp="Variance")$vcov[1]
0.25 *0.25
pi()^2/3
?pi
(pi^2)/3
(pi^2)
# hand calculation
sigma2_0 <- as.data.frame(VarCorr(m_null),comp="Variance")$vcov[1]
total_var <- sigma2_0 + (pi^2)/3
icc_hand <- sigma2_0/total_var
icc_hand
?write.csv
?readr::write_csv
test <- tibble(x = c("a", NA, "b"), y = c("c", "d", "e"))
test <- tidyverse::tibble(x = c("a", NA, "b"), y = c("c", "d", "e"))
library(tidyverse)
test <- tibble(x = c("a", NA, "b"), y = c("c", "d", "e"))
file_name <- "testing.csv"
readr::write_csv(test, file = file_name)
test2 <- read_csv("testing.csv")
?read.table
# ARDS patients
merged_data <- merged_data %>%
mutate(ARDS = if_else(stringr::str_detect(all_diagnoses, "J80"), 1, 0))
